%YAML 1.1
---
# Snapcraft Recipe for GNU nano
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

name: nano
summary: Small, friendly text editor inspired by Pico
description: |
  GNU nano is an easy-to-use text editor originally designed as a replacement
  for Pico, the ncurses-based editor from the non-free mailer package Pine
  (itself now available under the Apache License as Alpine).

  However, GNU nano also implements many features missing in Pico, including:
    - undo/redo
    - line numbering
    - syntax coloring
    - soft-wrapping of overlong lines
    - selecting text by holding Shift
    - interactive search and replace (with regular expression support)
    - a go-to line (and column) command
    - support for multiple file buffers
    - auto-indentation
    - tab completion of filenames and search terms
    - toggling features while running
    - and full internationalization support

  This is NOT an official nano distribution, refer the issue tracker for any problems regarding the use of this snap:

    Issues Â· Lin-Buo-Ren/nano-snap
    https://github.com/Lin-Buo-Ren/nano-snap/issues

icon: snap/gui/nano.png

#version: determined-by-adopt-info
adopt-info: nano
base: core
confinement: classic
grade: stable

apps:
  nano:
    adapter: full
    command: bin/nano
    command-chain: &common_cmd_chain
    - bin/classic-launch
    - bin/locales-launch
    - bin/magic-launch
    - bin/ncurses-launch
    - bin/nano-launch
    environment: &common_env
      SNAP_ARCH_TRIPLET: $SNAPCRAFT_ARCH_TRIPLET

  rnano:
    adapter: full
    command: bin/rnano
    command-chain: *common_cmd_chain
    environment: *common_env

parts:
  # Utility programs to help with packaging
  utilities:
    source: snap/local/utilities
    plugin: dump
    organize:
      '*': assets/utilities/
    prime:
    - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*-launch': bin/
    stage-packages:
    - dialog

  # Launcher to set up the usual snap runtime environment
  # https://forum.snapcraft.io/t/the-classic-launch-stage-snap/10441
  classic-launch:
    plugin: nil
    stage-snaps:
    - classic-launch

  # Launcher for fixing libmagic applications
  # https://forum.snapcraft.io/t/the-magic-launch-launcher-stage-snap/10442
  magic-launch:
    plugin: nil
    stage-snaps:
    - magic-launch

  # Launcher for fixing the glibc locales(and gnu gettext I18N support)
  # https://forum.snapcraft.io/t/the-locales-launch-stage-snap/10296
  locales-launch:
    plugin: nil
    stage-snaps:
    - locales-launch
    stage-packages:
    - libc-bin
    - locales

  # Launcher for fixing ncurses applications
  # https://forum.snapcraft.io/t/the-ncurses-launch-launcher-stage-snap/10444
  ncurses-launch:
    plugin: nil
    stage-snaps:
    - ncurses-launch

  # A minimal nanorc for this snap
  rcfiles:
    source: snap/local/rcfiles
    plugin: dump
    organize:
      '*': assets/rcfiles/

  nano:
    after: [utilities]
    source: git://git.savannah.gnu.org/nano.git
    override-pull: '"${SNAPCRAFT_STAGE}"/assets/utilities/parts-nano-override-pull.bash'
    plugin: autotools
    configflags:
    - --datarootdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/share
    - --sysconfdir=/snap/$SNAPCRAFT_PROJECT_NAME/current/assets/rcfiles
    build-packages:
    - gettext
    - groff
    - libmagic-dev
    - libncursesw5-dev
    - pkg-config
    - texinfo
    stage-packages:
    - libmagic1
    - libncursesw5
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current: /
